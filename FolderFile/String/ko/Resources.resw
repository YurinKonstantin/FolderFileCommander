<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContentButton.PrimaryButtonText" xml:space="preserve">
    <value>확인</value>
  </data>
  <data name="ContentButton.SecondaryButtonText" xml:space="preserve">
    <value>취소</value>
  </data>
  <data name="CreatText" xml:space="preserve">
    <value>만들어진</value>
  </data>
  <data name="Eas" xml:space="preserve">
    <value>더하다</value>
  </data>
  <data name="InfoText" xml:space="preserve">
    <value>속성</value>
  </data>
  <data name="IzmenText" xml:space="preserve">
    <value>변화</value>
  </data>
  <data name="MenuTextCopi.Text" xml:space="preserve">
    <value>부</value>
  </data>
  <data name="MenuTextDelete.Text" xml:space="preserve">
    <value>지우다</value>
  </data>
  <data name="MenuTextInfo.Text" xml:space="preserve">
    <value>속성</value>
  </data>
  <data name="MenuTextOpen.Text" xml:space="preserve">
    <value>열다</value>
  </data>
  <data name="MenuTextpaste.Text" xml:space="preserve">
    <value>풀</value>
  </data>
  <data name="MessageContentAdd" xml:space="preserve">
    <value>응용 프로그램은 지정된 폴더와 내용에 액세스 할 수 있습니다. 나중에 위치를 추가하거나 제거 할 수 있습니다. 처음에는 음악, 이미지가있는 폴더 및 로컬 및 이동식 디스크에 액세스 할 수 있습니다.</value>
  </data>
  <data name="MessageContentDostup" xml:space="preserve">
    <value>응용 프로그램 작업을 위해서는 파일 시스템에 액세스해야합니다. 다음 단계에 따라 애플리케이션을 계속 진행하고 다시 시작하십시오 (시작> 설정> 개인 정보> 파일 시스템).</value>
  </data>
  <data name="MessageErorCreatContent" xml:space="preserve">
    <value>파일을 작성하는 중에 오류가 발생했습니다. 파일이 생성되지 않았습니다!</value>
  </data>
  <data name="MessageErorCreatTile" xml:space="preserve">
    <value>오류</value>
  </data>
  <data name="MessageTileAdd" xml:space="preserve">
    <value>시작하기 전에 작업 위치를 추가하십시오</value>
  </data>
  <data name="MessageTiletDostup" xml:space="preserve">
    <value>파일 시스템 액세스</value>
  </data>
  <data name="NameText" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="NoSey" xml:space="preserve">
    <value>지금은 아닙니다</value>
  </data>
  <data name="PathText" xml:space="preserve">
    <value>통로</value>
  </data>
  <data name="SizeText" xml:space="preserve">
    <value>크기</value>
  </data>
  <data name="tabItem1.Header" xml:space="preserve">
    <value>집</value>
  </data>
  <data name="tabItem1LabCopi.Label" xml:space="preserve">
    <value>부</value>
  </data>
  <data name="tabItem1LabCreat.Label" xml:space="preserve">
    <value>창조하다</value>
  </data>
  <data name="tabItem1Labdelete.Label" xml:space="preserve">
    <value>지우다</value>
  </data>
  <data name="tabItem1LabIzmen.Label" xml:space="preserve">
    <value>변화</value>
  </data>
  <data name="tabItem1LabPaste.Label" xml:space="preserve">
    <value>풀</value>
  </data>
  <data name="tabItem1LabPeremen.Label" xml:space="preserve">
    <value>움직임</value>
  </data>
  <data name="tabItem1LabSelectAll.Label" xml:space="preserve">
    <value>모두 선택</value>
  </data>
  <data name="tabItem1LabVid.Label" xml:space="preserve">
    <value>전망</value>
  </data>
  <data name="tabItem1TextFile.Text" xml:space="preserve">
    <value>파일</value>
  </data>
  <data name="tabItem1TextFolder.Text" xml:space="preserve">
    <value>폴더</value>
  </data>
  <data name="tabItem2.Header" xml:space="preserve">
    <value>전망</value>
  </data>
  <data name="tabItem2LabAddPlase.Content" xml:space="preserve">
    <value>더하다</value>
  </data>
  <data name="tabItem2LabAddPlase.Label" xml:space="preserve">
    <value>위치 추가</value>
  </data>
  <data name="tabItem2LabDelete.Label" xml:space="preserve">
    <value>위치 삭제</value>
  </data>
  <data name="tabItem2LabdeletePod.Label" xml:space="preserve">
    <value>확인</value>
  </data>
  <data name="tabItem2TextB.Text" xml:space="preserve">
    <value>아래 목록에서 삭제할 폴더를 선택하고 확인을 클릭하십시오</value>
  </data>
  <data name="TextCopi" xml:space="preserve">
    <value>부</value>
  </data>
  <data name="textDostup.PrimaryButtonText" xml:space="preserve">
    <value>액세스 권한 부여</value>
  </data>
  <data name="TextNewFile.Header" xml:space="preserve">
    <value>이름 파일</value>
  </data>
  <data name="TextNewFile.Text" xml:space="preserve">
    <value>새로운 파일</value>
  </data>
  <data name="TextNewFile1" xml:space="preserve">
    <value>새로운 파일</value>
  </data>
  <data name="TextNewFileTip.Text" xml:space="preserve">
    <value>파일 타입</value>
  </data>
  <data name="TextNewFolder" xml:space="preserve">
    <value>새 폴더</value>
  </data>
  <data name="TextNewName.Header" xml:space="preserve">
    <value>새로운 이름</value>
  </data>
  <data name="TextOpenAs.Text" xml:space="preserve">
    <value>로 열려면...</value>
  </data>
  <data name="textViews.Text" xml:space="preserve">
    <value>전망</value>
  </data>
  <data name="TileDeleteFile" xml:space="preserve">
    <value>파일 삭제</value>
  </data>
  <data name="TileDeleteFolder" xml:space="preserve">
    <value>폴더 삭제</value>
  </data>
  <data name="TilePasteFile" xml:space="preserve">
    <value>파일 복사</value>
  </data>
  <data name="TilePasteFolder" xml:space="preserve">
    <value>폴더 복사</value>
  </data>
  <data name="TipText" xml:space="preserve">
    <value>유형</value>
  </data>
  <data name="ToggleTheme.Header" xml:space="preserve">
    <value>테마</value>
  </data>
</root>