<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContentButton.PrimaryButtonText" xml:space="preserve">
    <value>Принять</value>
  </data>
  <data name="ContentButton.SecondaryButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="CreatText" xml:space="preserve">
    <value>Создан</value>
  </data>
  <data name="Eas" xml:space="preserve">
    <value>Добавить</value>
  </data>
  <data name="InfoText" xml:space="preserve">
    <value>Свойства</value>
  </data>
  <data name="IzmenText" xml:space="preserve">
    <value>Изменен</value>
  </data>
  <data name="MenuTextCopi.Text" xml:space="preserve">
    <value>Копировать</value>
  </data>
  <data name="MenuTextDelete.Text" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="MenuTextInfo.Text" xml:space="preserve">
    <value>Свойства</value>
  </data>
  <data name="MenuTextOpen.Text" xml:space="preserve">
    <value>Открыть</value>
  </data>
  <data name="MenuTextpaste.Text" xml:space="preserve">
    <value>Вставить</value>
  </data>
  <data name="MessageContentAdd" xml:space="preserve">
    <value>Приложение будет иметь доступ к указанным папкам и содержимому.  В дальнейшем можно добавлять или удалять расположения.  Изначально открыт доступ к папкам с музыкой, изображениями и к локальным и съемным дискам.</value>
  </data>
  <data name="MessageContentDostup" xml:space="preserve">
    <value>Для работы приложения необходим доступ к файловой системе. Выполните следующее действие, чтобы продолжить и запустите его снова: Пуск -&gt; Параметры  -&gt; Конфиденциальность -&gt;Файловая система.</value>
  </data>
  <data name="MessageErorCreatContent" xml:space="preserve">
    <value>Произошла ошибка при создании файла. Файл не создан!</value>
  </data>
  <data name="MessageErorCreatTile" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="MessageTileAdd" xml:space="preserve">
    <value>Перед тем, как начать, добавим расположение для работы</value>
  </data>
  <data name="MessageTiletDostup" xml:space="preserve">
    <value>Доступ к файловой системе</value>
  </data>
  <data name="NameText" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="NoSey" xml:space="preserve">
    <value>Не сейчас</value>
  </data>
  <data name="PathText" xml:space="preserve">
    <value>Путь</value>
  </data>
  <data name="SizeText" xml:space="preserve">
    <value>Размер</value>
  </data>
  <data name="tabItem1.Header" xml:space="preserve">
    <value>Главное</value>
  </data>
  <data name="tabItem1LabCopi.Label" xml:space="preserve">
    <value>Копировать</value>
  </data>
  <data name="tabItem1LabCreat.Label" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="tabItem1Labdelete.Label" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="tabItem1LabIzmen.Label" xml:space="preserve">
    <value>Изменить</value>
  </data>
  <data name="tabItem1LabPaste.Label" xml:space="preserve">
    <value>Вставить</value>
  </data>
  <data name="tabItem1LabPeremen.Label" xml:space="preserve">
    <value>Переместить</value>
  </data>
  <data name="tabItem1LabSelectAll.Label" xml:space="preserve">
    <value>Выделить всё</value>
  </data>
  <data name="tabItem1LabVid.Label" xml:space="preserve">
    <value>Просмотр</value>
  </data>
  <data name="tabItem1TextFile.Text" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="tabItem1TextFolder.Text" xml:space="preserve">
    <value>Папку</value>
  </data>
  <data name="tabItem2.Header" xml:space="preserve">
    <value>Вид</value>
  </data>
  <data name="tabItem2LabAddPlase.Content" xml:space="preserve">
    <value>Добавить</value>
  </data>
  <data name="tabItem2LabAddPlase.Label" xml:space="preserve">
    <value>Добавить расположение</value>
  </data>
  <data name="tabItem2LabDelete.Label" xml:space="preserve">
    <value>Удалить расположение</value>
  </data>
  <data name="tabItem2LabdeletePod.Label" xml:space="preserve">
    <value>Подтвердить</value>
  </data>
  <data name="tabItem2TextB.Text" xml:space="preserve">
    <value>Выберите папку для удаления из списка ниже и нажмите "Подтвердить"</value>
  </data>
  <data name="TextCopi" xml:space="preserve">
    <value>Копирование</value>
  </data>
  <data name="textDostup.PrimaryButtonText" xml:space="preserve">
    <value>Предоставить доступ</value>
  </data>
  <data name="TextNewFile.Header" xml:space="preserve">
    <value>Имя файла</value>
  </data>
  <data name="TextNewFile.Text" xml:space="preserve">
    <value>Новый файл</value>
  </data>
  <data name="TextNewFile1" xml:space="preserve">
    <value>Новый файл</value>
  </data>
  <data name="TextNewFileTip.Text" xml:space="preserve">
    <value>Тип файла</value>
  </data>
  <data name="TextNewFolder" xml:space="preserve">
    <value>Новая папка</value>
  </data>
  <data name="TextNewName.Header" xml:space="preserve">
    <value>Новое имя</value>
  </data>
  <data name="TextOpenAs.Text" xml:space="preserve">
    <value>Открыть с помощью...</value>
  </data>
  <data name="textViews.Text" xml:space="preserve">
    <value>Структура</value>
  </data>
  <data name="TileDeleteFile" xml:space="preserve">
    <value>Удаление файла</value>
  </data>
  <data name="TileDeleteFolder" xml:space="preserve">
    <value>Удаление папки</value>
  </data>
  <data name="TilePasteFile" xml:space="preserve">
    <value>Копирование файла</value>
  </data>
  <data name="TilePasteFolder" xml:space="preserve">
    <value>Копирование папки</value>
  </data>
  <data name="TipText" xml:space="preserve">
    <value>Тип</value>
  </data>
</root>